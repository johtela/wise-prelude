Collection«import«Base, Comparison, Math«Arith, +, ++»», class«Iterator«i«a», _moveNext«->>«i«a», Bool»», _current«->>«i«a», a»»», Iterable«i«a», _iterator«->>«i«a», b«a, Iterator»»»», Indexed«i«a», @length«->>«i«a», Num»», @«->>«i«a», Num, a»»», MutableIndexed«m«a, Indexed», @new«->>«Num, m«a»»», @resize«->>«m«a», Num, Unit»», @set«->>«m«a», Num, a, Unit»»», Mappable«m«a», |>«->>«m«a», ->«a, b», m«b»»»», Filterable«f«a», |>?«->>«f«a», ->«a, Bool», f«a»»»»», define«---«"Operations on Indexed types"», |>!«->>«i«a, Indexed», ->>«a, Num, Unit», Unit», ->>«arr, _iter, do«set«i, -1», let«a, arr», while«<«++«i», @length«a»», _iter«@«a, ^«i»», ^«i»»»»»», |>\«->>«i«a, Indexed», b, ->>«b, a, b», b», ->>«arr, initial, _fold, do«set«res, initial», |>!«arr, ->>«a, _, _ignore«:=«res, _fold«^«res», a»»»»», ^«res»»»», ---«"Operations on MutableIndexed types"», @map«->>«a«b, Indexed, MutableIndexed», ->>«b, c», a«c»», ->>«indexed, _mapper, do«let«arr, indexed», let«res, @new«@length«arr»»», |>!«arr, ->>«a, i, @set«res, i, _mapper«a»»»», res»»», @map?«->>«a«b, Indexed, MutableIndexed», ->>«b, ?«c»», a«c»», ->>«indexed, _mapper, do«let«arr, indexed», let«res, @new«@length«arr»»», set«i, -1», |>!«arr, ->>«a, _, ?with«_mapper«a», ->>«b, @set«res, ++«i», b»»»»», @resize«res, +«^«i», 1»», res»»»»»