Collection«import«Base, Comparison, Math«Arith, +, ++»», class«Indexed«i«a», _length«->>«i«a», Num»», @«->>«i«a», Num, a»»», MutableIndexed«m«a, Indexed», _newIndexed«->>«Num, m«a»»», _resize«->>«m«a», Num, Unit»», _set«->>«m«a», Num, a, Unit»»», Mappable«m«a», |>«->>«m«a», ->«a, b», m«b»»»», Filterable«f«a», |>?«->>«f«a», ->«a, Bool», f«a»»»»», define«---«"Operations on Indexed types"», |>!«->>«i«a, Indexed», ->>«a, Num, Unit», Unit», ->>«arr, _iter, do«let«i, -1», let«a, arr», while«<«++«i», _length«a»», _iter«@«a, i», i»»»»», |>\«->>«i«a, Indexed», b, ->>«b, a, b», b», ->>«arr, initial, _fold, do«let«res, initial», |>!«arr, ->>«a, _, _ignore«set«res, _fold«res, a»»»»», res»»», ---«"Operations on MutableIndexed types"», _map«->>«arr, _mapper, do«let«res, _newIndexed«_length«arr»»», |>!«arr, ->>«a, i, _set«res, i, _mapper«a»»»», res»»», _map?«->>«arr, _mapper, do«let«res, _newIndexed«_length«arr»»», let«i, -1», |>!«arr, ->>«a, _, _withValue«_mapper«a», ->>«b, _set«res, ++«i», b»»»»», _resize«res, +«i, 1»», res»»»»»