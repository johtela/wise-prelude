Data/Monoid«import«Lang/Number¸ Lang/Comparison»¸ class«"# Monoids

_Monoid_ captures the mathematical concept of structures that can be combined associatively with an identity element. It provides a common interface for ""combining things"" in a predictable way.

A monoid has two methods `_mempty` and `_mappend`. The first one returns an empty or zero value of the type. When an empty value is appended to a monoid the result will be the original monoid.

$$""_mappend""(m, ""_mempty"") = m$$


The `_mappend` operation combines two monoids. It has to be associative:

$$""_mappend""(""_mappend""(m1, m2), m3) = ""_mappend""(m1, ""_mappend""(m2, m3))$$
"¸ Monoid«a¸ _mempty«a»¸ _mappend«->>«a¸ a¸ a»»»»¸ type«data«All¸ _all«Bool»»¸ data«Any¸ _any«Bool»»¸ data«Sum¸ _sum«Number»»¸ data«Prod¸ _prod«Number»»»¸ instance«Monoid«All¸ _mempty«_all«true»»¸ _mappend«->>«a1¸ a2¸ do«let«_all«b1»¸ a1»¸ let«_all«b2»¸ a2»¸ _all«&&«b1¸ b2»»»»»»¸ Monoid«Any¸ _mempty«_any«false»»¸ _mappend«->>«a1¸ a2¸ do«let«_any«b1»¸ a1»¸ let«_any«b2»¸ a2»¸ _any«||«b1¸ b2»»»»»»»»