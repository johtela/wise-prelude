Data/Dictionary«import«Lang/Object, Data/Collection», type«object«Dictionary«a», extends«Object»», alias«{:«a», Dictionary«a»»», define«:dict«->>«[«(«String, a»», {:«a»», ->>«values, :«Dictionary, <Object«:«Object, .fromEntries«values»»»»»», {:}«{:«a», asm«`{}`»», :dictGet«->>«{:«a», String, a», ->>«dict, "[", key, "]", asm«dict, `[`, key, `]`»»», :dictSet«->>«{:«a», String, a, {:«a»», ->>«dict, "[", key, "] = ", value, asm«`{ ...`, dict, `, [`, key, `]: `, value, ` }`»»», :dictDelete«->>«{:«a», String, {:«a»», ->>«dict, "[", key, "]", do«set«res, dict», asm«`{ [`, key, `]: _, ...`, res, ` } = `, res», ^«res»»»», :dictKeys«->>«Dictionary«a», [«String»», ->>«dict, :«Object, .keys«:«Dictionary, >Object«dict»»»»»», :dictValues«->>«Dictionary«a», [«a»», ->>«dict, :«Object, .values«:«Dictionary, >Object«dict»»»»»», :dictEntries«->>«Dictionary«a», [«(«String, a»»», ->>«dict, :«Object, .entries«:«Dictionary, >Object«dict»»»»»»»»