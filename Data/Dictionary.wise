Data/Dictionary«import«Lang/Object¸ Data/Collection¸ Data/Array»¸ type«object«Dictionary«a»¸ extends«Object»»¸ alias«{:«a»¸ Dictionary«a»»»¸ define«{::}«{:«a»¸ asm«`{}`»»¸ :dict«->>«[«(«String¸ a»»¸ {:«a»»¸ ->>«values¸ Dictionary:«<Object«Object:«.fromEntries«values»»»»»»¸ :get«->>«{:«a»¸ String¸ ?«a»»¸ ->>«dict¸ "["¸ key¸ "]"¸ asm«dict¸ `[`¸ key¸ `]`»»»¸ :set«->>«{:«a»¸ String¸ a¸ {:«a»»¸ ->>«dict¸ "["¸ key¸ "] = "¸ value¸ asm«`{ ...`¸ dict¸ `, [`¸ key¸ `]: `¸ value¸ ` }`»»»¸ :mutate«->>«{:«a»¸ String¸ a¸ a»¸ ->>«dict¸ "["¸ key¸ "] = "¸ value¸ asm«dict¸ `[`¸ key¸ `] = `¸ value»»»¸ :dictDelete«->>«{:«a»¸ String¸ {:«a»»¸ ->>«dict¸ "["¸ key¸ "]"¸ do«set«res¸ dict»¸ asm«`{ [`¸ key¸ `]: _, ...`¸ res¸ ` } = `¸ res»¸ ^«res»»»»¸ :has«->>«{:«a»¸ String¸ Bool»¸ ->>«dict¸ "["¸ key¸ "]"¸ Dictionary:«.hasOwnProperty«dict¸ key»»»»¸ :keys«->>«{:«a»¸ [«String»»¸ ->>«dict¸ Object:«.keys«Dictionary:«>Object«dict»»»»»»¸ :values«->>«{:«a»¸ [«a»»¸ ->>«dict¸ Object:«.values«Dictionary:«>Object«dict»»»»»»¸ :entries«->>«{:«a»¸ [«(«String¸ a»»»¸ ->>«dict¸ Object:«.entries«Dictionary:«>Object«dict»»»»»»¸ :group«->>«i«a¸ Indexed»¸ ->>«a¸ ?«String»»¸ Dictionary«[«a»»»¸ ->>«ind¸ " *by* "¸ .getKey¸ do«let«res¸ {::}»¸ @traverse«ind¸ ->>«val¸ _¸ match«.getKey«val»¸ |«?«key»¸ do«match«:get«res¸ key»¸ |«?«st»¸ _ignore«Array:«.push«st¸ val»»»»¸ |«_¸ _ignore«:mutate«res¸ key¸ [«val»»»»»»»¸ |«_¸ ()»»»»¸ res»»»»»