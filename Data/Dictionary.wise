Data/Dictionary«import«Lang/Object¸ Data/Collection»¸ type«object«Dictionary«a»¸ extends«Object»»¸ alias«{:«a»¸ Dictionary«a»»»¸ define«{::}«{:«a»¸ asm«`{}`»»¸ :dict«->>«[«(«String¸ a»»¸ {:«a»»¸ ->>«values¸ Dictionary:«<Object«Object:«.fromEntries«values»»»»»»¸ :dictGet«->>«{:«a»¸ String¸ ?«a»»¸ ->>«dict¸ "["¸ key¸ "]"¸ asm«dict¸ `[`¸ key¸ `]`»»»¸ :dictSet«->>«{:«a»¸ String¸ a¸ {:«a»»¸ ->>«dict¸ "["¸ key¸ "] = "¸ value¸ asm«`{ ...`¸ dict¸ `, [`¸ key¸ `]: `¸ value¸ ` }`»»»¸ :dictMutate«->>«{:«a»¸ String¸ a¸ a»¸ ->>«dict¸ "["¸ key¸ "] = "¸ value¸ asm«dict¸ `, [`¸ key¸ `] = `¸ value»»»¸ :dictDelete«->>«{:«a»¸ String¸ {:«a»»¸ ->>«dict¸ "["¸ key¸ "]"¸ do«set«res¸ dict»¸ asm«`{ [`¸ key¸ `]: _, ...`¸ res¸ ` } = `¸ res»¸ ^«res»»»»¸ :dictHas«->>«{:«a»¸ String¸ Bool»¸ ->>«dict¸ "["¸ key¸ "]"¸ Dictionary:«.hasOwnProperty«dict¸ key»»»»¸ :dictKeys«->>«{:«a»¸ [«String»»¸ ->>«dict¸ Object:«.keys«Dictionary:«>Object«dict»»»»»»¸ :dictValues«->>«{:«a»¸ [«a»»¸ ->>«dict¸ Object:«.values«Dictionary:«>Object«dict»»»»»»¸ :dictEntries«->>«{:«a»¸ [«(«String¸ a»»»¸ ->>«dict¸ Object:«.entries«Dictionary:«>Object«dict»»»»»»¸ :dictFromIndexed«->>«i«a¸ Indexed»¸ ->>«a¸ ?«String»»¸ Dictionary«a»»¸ ->>«ind¸ .getKey¸ do«let«res¸ {::}»¸ @traverse«ind¸ ->>«val¸ _¸ match«.getKey«val»¸ |«?«key»¸ _ignore«:dictMutate«res¸ key¸ val»»»¸ |«_¸ ()»»»»¸ res»»»»»