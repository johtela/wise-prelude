Parsec/Lexer«import«Lang/RegExp¸ Parsec/Input»¸ type«data«TokenMatcher«s»¸ TokenMatcher«RegExp¸ s»»¸ data«Token«s»¸ Token«s¸ String»»¸ data«Lexer«s»¸ Lexer«[«TokenMatcher«s»»»»»¸ define«newLexer«->«[«TokenMatcher«s»»¸ Lexer«s»»¸ ->«matchers¸ Lexer«@map«matchers¸ ->>«m¸ do«let«TokenMatcher«re¸ token»¸ m»¸ TokenMatcher«_reflags«re¸ "yu"»¸ token»»»»»»»¸ matchToken«->«Lexer«s»¸ String¸ Number¸ ?«Token«s»»»¸ ->«Lexer«matchers»¸ input¸ pos¸ @first«matchers¸ ->>«matcher¸ do«let«TokenMatcher«re¸ token»¸ matcher»¸ RegExp:«.lastIndex.set«re¸ pos»»¸ match«RegExp:«.exec«re¸ input»»¸ |«?«m»¸ ?«Token«token¸ @«RegExpExecArray:«>Array«m»»¸ 0»»»»¸ |«_¸ Null»»»»»»»»»