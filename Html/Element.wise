Html/Element«import«Lang/Base, Data/Collection, Data/Array», type«object«CollectionBase«a», length«Num», item«->«Num, a»»», object«DOMTokenList, extends«CollectionBase«Str»», value«Str», add«->«[«Str», Unit»», contains«->«Str, Bool»», remove«->«[«Str», Unit»», replace«->«Str, Str, Bool»», toggle«->«Str, Bool»», forEach«->«->«Str, Num, Unit», Unit»»», object«NamedCollection«a», extends«CollectionBase«a»», namedItem«->«Str, ?«a»»»», object«Event«a», bubbles«Bool», cancelBubble«Bool, mutable», cancelable«Bool», composed«Bool», currentTarget«?«a»», defaultPrevented«Bool», eventPhase«Num», isTrusted«Bool», target«?«a»», type«Str», preventDefault«->«Unit, Unit»», stopImmediatePropagation«->«Unit, Unit»», stopPropagation«->«Unit, Unit»»», alias«EventListener«a», ->«Event«a», Unit»», object«Element, localName«Str», id«Str, mutable», classList«DOMTokenList», clientLeft«Num», clientTop«Num», clientHeight«Num», clientWidth«Num», innerHTML«Str, mutable», outerHTML«Str, mutable», innerText«Str, mutable», textContent«Str, mutable», prefix«Str, mutable», scrollHeight«Num», scrollWidth«Num», scrollLeft«Num, mutable», scrollTop«Num, mutable», children«NamedCollection«Element»», setAttribute«->«Str, Str, Unit»», append«->«Element, Unit»», addEventListener«->«Str, EventListener«Element», Unit»», removeEventListener«->«Str, EventListener«Element», Unit»»», object«InputElement, extends«Element», value«Str, mutable»», data«ElemAttr, |«.attr«Str, Str», .event«Str, EventListener«Element»»»», object«Window, alert«->«Str, Unit»»»», instance«Indexed«CollectionBase, @length«->>«coll, :«CollectionBase, .length«coll»»»», @«->>«coll, i, :«CollectionBase, .item«coll, i»»»»»», define«_window«Window, asm«`window`»», _body«Element, asm«`document.body`»», _createElement«->>«Str, Element», ->>«name, asm«`document.createElement(`, name, `)`»»», setElemAttrs«->«Element, [«ElemAttr», Unit», ->«element, attributes, @foreach«attributes, ->>«attr, _, match«attr, |«.attr«name, value», :«Element, .setAttribute«element, name, value»»», |«.event«ev, listen», :«Element, .addEventListener«element, ev, listen»»»»»»»», elem«->«Str, [«ElemAttr», [«Element», Element», ->«name, attrs, children, do«let«res, _createElement«name»», setElemAttrs«res, attrs», @foreach«children, ->>«e, _, :«Element, .append«res, e»»»», res»»», textElem«->«name, attrs, text, do«let«res, _createElement«name»», setElemAttrs«res, attrs», :«Element, .textContent.set«res, text»», res»»», <div>«->>«attrs, children, elem«"div", attrs, children»»», <span>«->>«attrs, children, elem«"span", attrs, children»»», <input>«->>«[«ElemAttr», InputElement», ->>«attrs, :«InputElement, .from.Element«elem«"input", attrs, [»»»»», <button>«->>«attrs, caption, textElem«"button", attrs, caption»»», .id«->>«name, .attr«"id", name»»», .type«->>«name, .attr«"type", name»»», .click«->>«listen, .event«"click", listen»»»»»