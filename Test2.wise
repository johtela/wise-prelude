Test2«
  import«
    Prelude», 
  type«
    List«
      |«
        Nil, Cons«
          a, List«
            a»
          »
        »
      », 
    NList«
      alias«
        List«
          Num»
        »
      », 
    Foo«
      alias«
        {«
          foo«
            Num», 
          bar«
            Bool», 
          .tail»
        »
      »
    », 
  define«
    foo«
      Foo«
        |«
          name«
            Str»
          »
        », 
      {«
        foo«
          1», 
        bar«
          false», 
        name«
          "foo"»
        »
      », 
    getName«
      fun«
        rec, .«
          rec, name»
        »
      », 
    testFoo«
      |«
        foo, name«
          "bar"»
        »
      », 
    bar«
      («
        Str, Num», 
      («
        "foo", 3»
      », 
    'max«
      mac«
        a, b, if«
          >«
            a, b», 
          a, b»
        »
      », 
    min«
      ->«
        Num, Num, Num», 
      fun«
        a, b, if«
          <«
            a, b», 
          a, b»
        »
      », 
    factorial«
      ->«
        Num, Num», 
      fun«
        n, do«
          let«
            res, n», 
          while«
            >«
              --«
                n», 
              0», 
            *=«
              res, n», 
            res»
          »
        »
      »
    »
  »
