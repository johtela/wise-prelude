Math/Arith«import«Lang/Comparison, Math/Base», ---«"# ➗ Arithmetic Operators

The basic arithmetic operators such as negation, addition, subtraction, multiplication, and division are defined in the Arith typeclass. Zero and one are overloaded constants in that class. This allows overloading operators for numeric sets like $NN, RR, CC,$ as well as multidimensional sets such as vectors."», class«Arith«a«Eq», _0«a», _1«a», _-«->>«a, a»», +«->>«a, a, a»», -«->>«a, a, a»», *«->>«a, a, a»», /«->>«a, a, a»», _abs«->>«a, a»», _floor«->>«a, a»», _ceil«->>«a, a»», _round«->>«a, a»»»», instance«---«"## Arith Instance for Number


Number is naturally the first type that implements Arith class. All the operations translate to ""native"" JS code."», Arith«Number, _0«0», _1«1», _-«->>«a, asm«`-`, a»»», +«->>«a, b, asm«a, ` + `, b»»», -«->>«a, b, asm«a, ` - `, b»»», *«->>«a, b, asm«a, ` * `, b»»», /«->>«a, b, asm«a, ` / `, b»»», _abs«:«Math, .abs»», _floor«:«Math, .floor»», _ceil«:«Math, .ceil»», _round«:«Math, .round»»»», define«---«"## Mutating Operators


We also provide the familiar variants of arithmetic operators that mutate their first argument. Naturally the type of the first argument is mutable `&(a: Eq, Arith)` for all these."», ++«->>«var, :=«var, +«^«var», _1»»»», --«->>«var, :=«var, -«^«var», _1»»»», +=«->>«var, num, :=«var, +«^«var», num»»»», -=«->>«var, num, :=«var, -«^«var», num»»»», *=«->>«var, num, :=«var, *«^«var», num»»»», /=«->>«var, num, :=«var, /«^«var», num»»»»», define«---«"## Aggregate Operators

Folding arguments makes adding and multiplying multiple values together easier since we can use a ""flat"" expression structure."», _sum3«->>«a1, a2, a3, _fold3«+, a1, a2, a3»»», _sum4«->>«a1, a2, a3, a4, _fold4«+, a1, a2, a3, a4»»», _sum5«->>«a1, a2, a3, a4, a5, _fold5«+, a1, a2, a3, a4, a5»»», _sum6«->>«a1, a2, a3, a4, a5, a6, _fold6«+, a1, a2, a3, a4, a5, a6»»», _prod3«->>«a1, a2, a3, _fold3«*, a1, a2, a3»»», _prod4«->>«a1, a2, a3, a4, _fold4«*, a1, a2, a3, a4»»», _prod5«->>«a1, a2, a3, a4, a5, _fold5«*, a1, a2, a3, a4, a5»»», _prod6«->>«a1, a2, a3, a4, a5, a6, _fold6«*, a1, a2, a3, a4, a5, a6»»»»»