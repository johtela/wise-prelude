Control/Async«import«Lang/Base, Control/Monad», type«PromiseLike«object«then«->«->«a, PromiseLike«a»», PromiseLike«a»»»»», Promise«object«...«PromiseLike«a»», catch«->«->«b, Promise«a, b»», Promise«a, b»»»»»», define«_promise«->>«->«->«a, Unit», Unit», PromiseLike«a»», ->>«executor, asm«`new Promise(`, executor, `)`»»»», instance«Monad«PromiseLike, >>=«->>«prom, fun, .«prom, then«fun»»»»»»»