List«import«Base, Comparison, Math«Arith, +, ++, _max», Collection, Monad», type«[:«|«Nil, ::«a, Lazy«[:«a»»»»»», define«listRange«->«from, to, ::«from, \«if«<=«+«from, 1», to», listRange«+«from, 1», to», Nil»»»»», mapList«->«list, mapper, match«list, |«::«first, rest», ::«mapper«first», \«mapList«\!«rest», mapper»»»», |«_, Nil»»»», filterList«->«list, filter, match«list, |«::«first, rest», if«filter«first», ::«first, \«filterList«\!«rest», filter»»», filterList«\!«rest», filter»»», |«_, Nil»»»», foldList«->«list, acc, folder, match«list, |«::«first, rest», foldList«\!«rest», folder«acc, first», folder»», |«_, acc»»»»», instance«Mappable«[:, _map«->>«list, mapper, mapList«list, mapper»»»», Foldable«[:, _fold«->>«list, acc, folder, foldList«list, acc, folder»»»»»»