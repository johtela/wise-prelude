List«import«Base, Comparison, Math«Arith, +, ++, _max», Collection, Monad», type«[:«|«Nil, ::«a, Lazy«[:«a»»»»»», define«listRange«->«from, to, ::«from, \«if«<=«+«from, 1», to», listRange«+«from, 1», to», Nil»»»»», foldList«->«list, acc, folder, match«list, |«::«first, rest», foldList«\!«rest», folder«acc, first», folder»», |«_, acc»»»»», instance«Foldable«[:, _fold«->>«list, acc, folder, foldList«list, acc, folder»»»»»»