Html«import«Base, Iterate, Array», type«CollectionBase«object«length«Num», item«->«Num, a»»»», DOMTokenList«object«...«CollectionBase«Str»», value«Str», add«->«[«Str», Unit»», contains«->«Str, Bool»», remove«->«[«Str», Unit»», replace«->«Str, Str, Bool»», toggle«->«Str, Bool»», forEach«->«->«Str, Num, Unit», Unit»»»», NamedCollection«object«...«CollectionBase«Str»», namedItem«->«Str, ?«a»»»»», Event«object«bubbles«Bool», cancelBubble«$«Bool»», cancelable«Bool», composed«Bool», currentTarget«?«a»», defaultPrevented«Bool», eventPhase«Num», isTrusted«Bool», target«?«a»», type«Str», preventDefault«->«Unit, Unit»», stopImmediatePropagation«->«Unit, Unit»», stopPropagation«->«Unit, Unit»»»», Element«object«localName«Str», id«$«Str»», classList«DOMTokenList», clientLeft«Num», clientTop«Num», clientHeight«Num», clientWidth«Num», innerHTML«$«Str»», outerHTML«$«Str»», innerText«$«Str»», textContent«$«Str»», prefix«?«Str»», scrollHeight«Num», scrollWidth«Num», scrollLeft«$«Num»», scrollTop«$«Num»», setAttribute«->«Str, Str, Unit»»»», InputElement«object«...«Element», value«$«Str»»»», EventListener«alias«->«Event«Element», Unit»»», ElemAttr«|«.attr«Str, Str», .event«Str, EventListener»»», Window«object«alert«->«Str, Unit»»»»», instance«Indexed«CollectionBase, _length«->>«coll, .«coll, length»»», @«->>«coll, i, .«coll, item«i»»»»»», define«window«Window, asm«`window`»», body«Element, asm«`document.body`»», _createElement«->>«Str, Element», ->>«name, asm«`document.createElement(`, name, `)`»»», _children«->>«Element, NamedCollection«Element»», ->>«el, asm«el, `.children`»»», _append«->>«Element, Element, Unit», ->>«el, child, asm«el, `.append(`, child, `)`»»», _addEventListener«->>«Element, Str, EventListener, Unit», ->>«el, event, listen, asm«el, `.addEventListener(`, event, `,`, listen, `)`»»», _removeEventListener«->>«Element, Str, EventListener, Unit», ->>«el, event, listen, asm«el, `.removeEventListener(`, event, `,`, listen, `)`»»», setElemAttrs«->«Element, [«ElemAttr», Unit», ->«element, attributes, |>!«attributes, ->>«attr, _, match«attr, |«.attr«name, value», «.«element, setAttribute», name, value»», |«.event«ev, listen», _addEventListener«element, ev, listen»»»»»»», elem«->«Str, [«ElemAttr», [«Element», Element», ->«name, attrs, children, do«let«res, _createElement«name»», setElemAttrs«res, attrs», |>!«children, ->>«e, _, _append«res, e»»», res»»», textElem«->«name, attrs, text, do«let«res, _createElement«name»», setElemAttrs«res, attrs», :=«.«res, textContent», text», res»»», <div>«->>«attrs, children, elem«"div", attrs, children»»», <span>«->>«attrs, children, elem«"span", attrs, children»»», <input>«->>«[«ElemAttr», InputElement», ->>«attrs, elem«"input", attrs, [»»», <button>«->>«attrs, caption, textElem«"button", attrs, caption»»», .id«->>«name, .attr«"id", name»»», .type«->>«name, .attr«"type", name»»», .click«->>«listen, .event«"click", listen»»»»»