Vector«import«Math, Tuple», type«Vec2«alias«(«Num, Num»»»», class«Vector«a«Arith», _unif«->>«Num, a»», _dim«->>«a, Num»», _comp«->>«a, Num, Num»», _lensqr«->>«a, Num»», _dot«->>«a, a, Num»», _norm«->>«a, a»»»», instance«Arith«Vec2, _zero«->>«_, («0, 0»»», _one«->>«_, («1, 1»»», _neg«->>«a, _mapT2«a, _neg»»», +«->>«a, b, _zipT2«a, b, +»»», -«->>«a, b, _zipT2«a, b, -»»», *«->>«a, b, _zipT2«a, b, *»»», /«->>«a, b, _zipT2«a, b, /»»», _abs«->>«a, _mapT2«a, _abs»»», _floor«->>«a, _mapT2«a, _floor»»», _ceil«->>«a, _mapT2«a, _ceil»»», _round«->>«a, _mapT2«a, _round»»», _fract«->>«a, _mapT2«a, _fract»»»», Vector«Vec2, _unif«->>«a, («a, a»»», _dim«->>«_, 2»», _comp«->>«v, i, asm«v, `[`, i, `]`»»», _lensqr«->>«v, _withT2«v, ->>«x, y, +«*«x, x», *«y, y»»»»»», _dot«->>«v1, v2, _withT2T2«v1, v2, ->>«x1, y1, x2, y2, +«*«x1, x2», *«y1, y2»»»»»», _norm«->>«v, do«let«(«x, y», v», let«len, _sqrt«+«*«x, x», *«y, y»»»», («/«x, len», /«y, len»»»»»»», define«_veclen«->>«v, _sqrt«_lensqr«v»»»»»»