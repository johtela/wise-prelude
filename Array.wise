Array«import«Base, Comparison, Math«Arith, +, ++, _max», Collection», instance«Indexed«[, _length«->>«arr, asm«arr, `.length`»»», @«->>«arr, ind, asm«arr, `[`, ind, `]`»»»»», define«---«"JS Array operations"», _array«->>«Num, [«a»», ->>«len, asm«`Array(`, len, `)`»»», _resize«->>«[«a», Num, Unit», ->>«arr, size, asm«arr, `.length = `, size»»», _set«->>«[«a», Num, a, Unit», ->>«arr, ind, val, asm«arr, `[`, ind, `] = `, val»»», _repeat«->>«a, Num, [«a»», ->>«val, cnt, asm«_array«cnt», `.fill(`, val, `)`»»», ---«"Operations on arrays"», _map«->>«arr, _mapper, do«let«res, _array«_length«arr»»», |>!«arr, ->>«a, i, _set«res, i, _mapper«a»»»», res»»», _map?«->>«arr, _mapper, do«let«res, _array«_length«arr»»», let«i, -1», |>!«arr, ->>«a, _, _withValue«_mapper«a», ->>«b, _set«res, ++«i», b»»»»», _resize«res, +«i, 1»», res»»»», instance«Mappable«[, |>«->>«arr, mapper, _map«arr, ->>«a, mapper«a»»»»»», Filterable«[, |>?«->>«arr, filter, do«let«res, _array«_length«arr»»», let«i, -1», |>!«arr, ->>«a, _, if«filter«a», _set«res, ++«i», a»»»», _resize«res, +«i, 1»», res»»»»»»