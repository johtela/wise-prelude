Tuple«import«Base, Comparison, Math», define«---«"Helper macros"», _withT1«->>«t, _op, do«let«(«a», t», _op«a»»»», _withT2«->>«t, _op, do«let«(«a, b», t», _op«a, b»»»», _withT3«->>«t, _op, do«let«(«a, b, c», t», _op«a, b, c»»»», _withT4«->>«t, _op, do«let«(«a, b, c, d», t», _op«a, b, c, d»»»», _withT1T1«->>«t1, t2, _op, do«let«(«a1», t1», let«(«a2», t2», _op«a1, a2»»»», _withT2T2«->>«t1, t2, _op, do«let«(«a1, b1», t1», let«(«a2, b2», t2», _op«a1, b1, a2, b2»»»», ---«"Tuple functions"», fst«->«(«a, _», a»», snd«->«(«_, b», b»», swap«->«(«a, b», («b, a»»»», instance«---«"Instances of Show"», Show«(«a«Show»», _show«->>«t, _withT1«t, ->>«a, _concat«[«"( ", _show«a», " )"»»»»»»», Show«(«a«Show», b«Show»», _show«->>«t, _withT2«t, ->>«a, b, _concat«[«"( ", _show«a», ", ", _show«b», " )"»»»»»»», Show«(«a«Show», b«Show», c«Show»», _show«->>«t, _withT3«t, ->>«a, b, c, _concat«[«"( ", _show«a», ", ", _show«b», ", ", _show«c», " )"»»»»»»», Show«(«a«Show», b«Show», c«Show», d«Show»», _show«->>«t, _withT4«t, ->>«a, b, c, d, _concat«[«"( ", _show«a», ", ", _show«b», ", ", _show«c», ", ", _show«d», " )"»»»»»»», ---«"Instances of Eq and Ord"», Eq«(«a«Eq»», ==«->>«t1, t2, _withT1T1«t1, t2, ==»»», !=«->>«t1, t2, _withT1T1«t1, t2, !=»»»», Ord«(«a«Eq, Ord»», <«->>«t1, t2, _withT1T1«t1, t2, <»»», >«->>«t1, t2, _withT1T1«t1, t2, >»»», <=«->>«t1, t2, _withT1T1«t1, t2, <=»»», >=«->>«t1, t2, _withT1T1«t1, t2, >=»»»», Eq«(«a«Eq», b«Eq»», ==«->>«t1, t2, _withT2T2«t1, t2, ->>«a1, b1, a2, b2, &&«==«a1, a2», ==«b1, b2»»»»»», !=«->>«t1, t2, _withT2T2«t1, t2, ->>«a1, b1, a2, b2, ||«!=«a1, a2», !=«b1, b2»»»»»»», Ord«(«a«Eq, Ord», b«Eq, Ord»», <«->>«t1, t2, _withT2T2«t1, t2, ->>«a1, b1, a2, b2, ||«<«a1, a2», <«b1, b2»»»»»», >«->>«t1, t2, _withT2T2«t1, t2, ->>«a1, b1, a2, b2, ||«>«a1, a2», >«b1, b2»»»»»», <=«->>«t1, t2, _withT2T2«t1, t2, ->>«a1, b1, a2, b2, ||«<=«a1, a2», <=«b1, b2»»»»»», >=«->>«t1, t2, _withT2T2«t1, t2, ->>«a1, b1, a2, b2, ||«>=«a1, a2», >=«b1, b2»»»»»»»»»